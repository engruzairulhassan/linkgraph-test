{"ast":null,"code":"var _jsxFileName = \"/home/enigmatix/PycharmProjects/linkgraph-test/src/components/AutocompleteComponent.tsx\",\n  _s = $RefreshSig$();\n// src/components/AutocompleteComponent.tsx\nimport React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { userStore } from '../store/UserStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutocompleteComponent = _s(observer(_c = _s(() => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    userStore.fetchUsers();\n  }, []);\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setQuery(value);\n    if (value) {\n      setSuggestions(userStore.users.filter(user => user.name.toLowerCase().includes(value.toLowerCase())).map(user => user.name));\n    } else {\n      setSuggestions([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleInputChange,\n      placeholder: \"Search for a user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: suggestions.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}, \"Bgvy+/ZYaHzKRdmFTPPGRKjsons=\")), \"Bgvy+/ZYaHzKRdmFTPPGRKjsons=\");\n_c2 = AutocompleteComponent;\nexport default AutocompleteComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"AutocompleteComponent$observer\");\n$RefreshReg$(_c2, \"AutocompleteComponent\");","map":{"version":3,"names":["React","useEffect","useState","observer","userStore","jsxDEV","_jsxDEV","AutocompleteComponent","_s","_c","query","setQuery","suggestions","setSuggestions","fetchUsers","handleInputChange","e","value","target","users","filter","user","name","toLowerCase","includes","map","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","index","_c2","$RefreshReg$"],"sources":["/home/enigmatix/PycharmProjects/linkgraph-test/src/components/AutocompleteComponent.tsx"],"sourcesContent":["// src/components/AutocompleteComponent.tsx\nimport React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { userStore } from '../store/UserStore';\n\nconst AutocompleteComponent: React.FC = observer(() => {\n  const [query, setQuery] = useState(\"\");\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n\n  useEffect(() => {\n    userStore.fetchUsers();\n  }, []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setQuery(value);\n    if (value) {\n      setSuggestions(\n        userStore.users\n          .filter(user => user.name.toLowerCase().includes(value.toLowerCase()))\n          .map(user => user.name)\n      );\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={query} onChange={handleInputChange} placeholder=\"Search for a user\" />\n      <div>\n        {suggestions.map((name, index) => (\n          <div key={index}>{name}</div>\n        ))}\n      </div>\n    </div>\n  );\n});\n\nexport default AutocompleteComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,qBAA+B,GAAAC,EAAA,CAAGL,QAAQ,CAAAM,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACrD,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAW,EAAE,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACdG,SAAS,CAACU,UAAU,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAIC,CAAsC,IAAK;IACpE,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BN,QAAQ,CAACM,KAAK,CAAC;IACf,IAAIA,KAAK,EAAE;MACTJ,cAAc,CACZT,SAAS,CAACe,KAAK,CACZC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC,CAAC,CACrEE,GAAG,CAACJ,IAAI,IAAIA,IAAI,CAACC,IAAI,CAC1B,CAAC;IACH,CAAC,MAAM;MACLT,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,oBACEP,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACV,KAAK,EAAEP,KAAM;MAACkB,QAAQ,EAAEb,iBAAkB;MAACc,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChG3B,OAAA;MAAAoB,QAAA,EACGd,WAAW,CAACa,GAAG,CAAC,CAACH,IAAI,EAAEY,KAAK,kBAC3B5B,OAAA;QAAAoB,QAAA,EAAkBJ;MAAI,GAAZY,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC,kCAAC;AAACE,GAAA,GAhCG5B,qBAA+B;AAkCrC,eAAeA,qBAAqB;AAAC,IAAAE,EAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}