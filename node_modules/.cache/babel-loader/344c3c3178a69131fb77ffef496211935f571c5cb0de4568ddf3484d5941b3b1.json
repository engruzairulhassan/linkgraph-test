{"ast":null,"code":"// src/stores/UserStore.ts\nimport { makeAutoObservable } from \"mobx\";\nimport axios from \"axios\";\nclass UserStore {\n  constructor() {\n    this.users = [];\n    makeAutoObservable(this);\n  }\n  async fetchUsers() {\n    try {\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n      this.users = response.data;\n    } catch (error) {\n      console.error(\"Failed to fetch users:\", error);\n    }\n  }\n}\nexport const userStore = new UserStore();","map":{"version":3,"names":["makeAutoObservable","axios","UserStore","constructor","users","fetchUsers","response","get","data","error","console","userStore"],"sources":["/home/enigmatix/PycharmProjects/linkgraph-test/src/store/UserStore.tsx"],"sourcesContent":["// src/stores/UserStore.ts\nimport { makeAutoObservable } from \"mobx\";\nimport axios from \"axios\";\nimport { User } from \"../types\";\n\nclass UserStore {\n  users: User[] = [];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  async fetchUsers() {\n    try {\n      const response = await axios.get<User[]>(\"https://jsonplaceholder.typicode.com/users\");\n      this.users = response.data;\n    } catch (error) {\n      console.error(\"Failed to fetch users:\", error);\n    }\n  }\n}\n\nexport const userStore = new UserStore();\n"],"mappings":"AAAA;AACA,SAASA,kBAAkB,QAAQ,MAAM;AACzC,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,SAAS,CAAC;EAGdC,WAAWA,CAAA,EAAG;IAAA,KAFdC,KAAK,GAAW,EAAE;IAGhBJ,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEA,MAAMK,UAAUA,CAAA,EAAG;IACjB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAS,4CAA4C,CAAC;MACtF,IAAI,CAACH,KAAK,GAAGE,QAAQ,CAACE,IAAI;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF;AACF;AAEA,OAAO,MAAME,SAAS,GAAG,IAAIT,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}